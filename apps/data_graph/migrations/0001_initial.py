# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-07-18 16:52
from __future__ import unicode_literals

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Graph',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Graph',
                'verbose_name_plural': 'Graph list',
            },
        ),
        migrations.CreateModel(
            name='GraphData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='data')),
                ('graph', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_graph.Graph')),
            ],
            options={
                'verbose_name': 'Graph data row',
                'verbose_name_plural': 'Graph data',
            },
        ),
        migrations.CreateModel(
            name='GraphModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('fields', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), size=None)),
                ('is_group', models.BooleanField(default=False, verbose_name='Is group')),
            ],
            options={
                'verbose_name': 'Graph model',
                'verbose_name_plural': 'Graph models',
            },
        ),
        migrations.CreateModel(
            name='GraphModelDrawing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('json', django.contrib.postgres.fields.jsonb.JSONField(null=True, verbose_name='json')),
            ],
            options={
                'verbose_name': 'Graph model drawing',
                'verbose_name_plural': 'Graph model drawings',
            },
        ),
        migrations.CreateModel(
            name='GraphNode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('node_json', django.contrib.postgres.fields.jsonb.JSONField(verbose_name='Node json')),
                ('graph', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_graph.Graph')),
            ],
        ),
        migrations.CreateModel(
            name='GraphNodeEdge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edge_json', django.contrib.postgres.fields.jsonb.JSONField(verbose_name='Edge json')),
                ('graph', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_graph.Graph')),
            ],
        ),
        migrations.CreateModel(
            name='GraphRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('from_fields', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), size=None)),
                ('to_fields', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), size=None)),
                ('comparators', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('equal', 'equal'), ('similar', 'similar'), ('translit_similar', 'translit_similar')], default='equal', max_length=50), help_text="choose from 'equal, similar, translit_similar', write without whitespaces", size=None)),
                ('graph', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_graph.Graph')),
            ],
            options={
                'verbose_name': 'Graph relation',
                'verbose_name_plural': 'Graph relations',
            },
        ),
        migrations.CreateModel(
            name='ModelTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('fields', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), size=None)),
                ('is_group', models.BooleanField(default=False, verbose_name='Is group')),
                ('drawing', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='data_graph.GraphModelDrawing')),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Model template',
                'verbose_name_plural': 'Model templates',
            },
        ),
        migrations.CreateModel(
            name='RelationTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('from_fields', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), size=None)),
                ('to_fields', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), size=None)),
                ('comparators', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('equal', 'equal'), ('similar', 'similar'), ('translit_similar', 'translit_similar')], default='equal', max_length=50), help_text="choose from 'equal, similar, translit_similar', write without whitespaces", size=None)),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Relation template',
                'verbose_name_plural': 'Relation templates',
            },
        ),
        migrations.AddField(
            model_name='graphmodel',
            name='drawing',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='data_graph.GraphModelDrawing'),
        ),
        migrations.AddField(
            model_name='graphmodel',
            name='graph',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_graph.Graph'),
        ),
    ]
